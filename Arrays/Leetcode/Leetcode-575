// class Solution {
// public:
//     int distributeCandies(vector<int>& candyType) {
//         unordered_set<int> unique(candyType.begin(), candyType.end());
//         int maxAllowed = candyType.size() / 2;
//         return min((int)unique.size(), maxAllowed);
//     }
// };



// class Solution {
// public:
//     int distributeCandies(vector<int>& candyType) {
//         set<int> s(candyType.begin(), candyType.end());
//         return min(s.size(),candyType.size() / 2);
//     }
// };
